* Data block at 5e00
menu_selection:                        ; >5e00
       byte >00
charset_addr:                          ; >5e01
       data charset_base
last_frames:                           ; >5e03
       byte >00
in_handlers:                           ; >5e04
       byte >00                                                      ; flag set but never read
rand8:                                 ; >5e05
       data >0000                                                    ; only low 8 bits are
                                                                     ; meaningfully random
       bss 9
width_bytes:                           ; >5e10
       byte >02
height_lines:                          ; >5e11
       byte >12
counter_low:                           ; >5e12
       byte >3A
counter_high:                          ; >5e13
       byte >F5
game_flags:                            ; >5e14
       byte >AC                                                      ; b0 set if room content
                                                                     ; drawn
saved_graphic:                         ; >5e15
       byte >36
saved_x:                               ; >5e16
       byte >28
saved_y:                               ; >5e17
       byte >97
some_height:                           ; >5e18
       byte >00
some_width:                            ; >5e19
       byte >00
room_attr:                             ; >5e1a
       byte >00
room_ptr:                              ; >5e1b
       data >2C00
room_width:                            ; >5e1d
       byte >30
room_height:                           ; >5e1e
       byte >0E
pickup_flags:                          ; >5e1f
       byte >00
pickup_pressed:                        ; >5e20
       byte >00
lives:                                 ; >5e21
       byte >00
text_attr:                             ; >5e22
       byte >C5
line_counter:                          ; >5e23
       byte >00
line_flags:                            ; >5e24
       byte >3A
num_creatures:                         ; >5e25
       byte >EF                                                      ; number of creatures
                                                                     ; processed this frame
last_creat_room:                       ; >5e26
       byte >22
creature_delay:                        ; >5e27
       byte >22
player_energy:                         ; >5e28
       byte >AF
chicken_level:                         ; >5e29
       byte >3A                                                      ; last drawn chicken level
score_bcd:                             ; >5e2a
       byte >F5,>AC,>36
in_doorway:                            ; >5e2d
       byte >0E
door_timer:                            ; >5e2e
       byte >00
walk_counter:                          ; >5e2f
       byte >00
inventory1:                            ; >5e30
       byte >06,>00,>00,>2C
inventory2:                            ; >5e34
       byte >30,>0E,>00,>00
inventory3:                            ; >5e38
       byte >00,>00,>00,>3A
flash_timer:                           ; >5e3c
       byte >EF                                                      ; score flash timer
clock_hours:                           ; >5e3d
       byte >22
clock_minutes:                         ; >5e3e
       byte >22
clock_seconds:                         ; >5e3f
       byte >AF
visited_rooms:                         ; >5e40
       byte >3A,>F5,>C0,>32,>33,>34,>32,>34,>0E,>00                  ; {visit rooms bit array
       byte >00,>80,>5B,>00,>0D,>80,>EF,>22,>22,>0D                  ; }

* Data block at 5e54
visited_percent:                       ; >5e54
       byte >80
food_ptr:                              ; >5e55
       data >0000

* Initial game state data
player_init:                           ; >600d
       byte >00,>00,>00,>00,>00,>00,>00,>00

* Data block at 6015
weapon_init:                           ; >6015
       byte >00,>00,>00,>00,>00,>00,>00,>00

* Data block at 601d
sound_init:                            ; >601d
       byte >00,>00,>00,>00,>00,>00,>00,>00

* Data block at 6025
acg_key_init:                          ; >6025
       byte >8C,>00,>00,>58,>58,>46,>00,>00
       byte >8D,>00,>00,>58,>58,>46,>00,>00
       byte >8E,>00,>00,>58,>58,>46,>00,>00

* green key
green_key_init:                        ; >603d
       byte >81,>05,>00,>70,>60,>44,>00,>00

* red key
red_key_init:                          ; >6045
       byte >81,>17,>00,>80,>40,>42,>00,>00

* cyan key
cyan_key_init:                         ; >604d
       byte >81,>53,>00,>58,>58,>45,>00,>00

* yellow key
       byte >81,>66,>00,>30,>87,>46,>00,>00

* Data block at 605d
       byte >80,>09,>00,>40,>40,>42,>00,>00                          ; leaf
       byte >00,>00,>00,>00,>00,>00,>00,>00                          ; tombstone1
       byte >00,>00,>00,>00,>00,>00,>00,>00                          ; tombstone2
       byte >00,>00,>00,>00,>00,>00,>00,>00                          ; tombstone3
       byte >00,>00,>00,>00,>00,>00,>00,>00                          ; tombstone4
       byte >8A,>05,>00,>40,>70,>46,>00,>00                          ; crucafix
       byte >8B,>30,>00,>40,>70,>45,>00,>00                          ; spanner
       byte >82,>3B,>00,>60,>60,>44,>00,>00                          ; wine
       byte >83,>48,>00,>70,>70,>45,>00,>00                          ; coin
       byte >84,>64,>00,>80,>80,>46,>00,>00                          ; wing
       byte >85,>6B,>00,>40,>40,>45,>00,>00                          ; whip
       byte >86,>13,>00,>50,>50,>44,>00,>00                          ; frog's leg
       byte >87,>84,>00,>60,>40,>43,>00,>00                          ; jewel
       byte >88,>1F,>00,>70,>70,>42,>00,>00                          ; money bag
       byte >89,>49,>00,>50,>40,>47,>00,>00                          ; skull

* Data block at 60d5
food_init:                             ; >60d5
       byte >50,>27,>00,>57,>67,>43,>00,>00                          ; can
       byte >50,>7F,>00,>40,>40,>46,>00,>00
       byte >50,>1E,>00,>50,>57,>46,>00,>00
       byte >50,>0C,>00,>60,>60,>43,>00,>00
       byte >50,>67,>00,>57,>40,>42,>00,>00
       byte >50,>41,>00,>57,>67,>42,>00,>00
       byte >51,>75,>00,>30,>40,>44,>00,>00                          ; candy
       byte >51,>83,>00,>30,>40,>46,>00,>00
       byte >51,>0C,>00,>60,>70,>42,>00,>00
       byte >51,>68,>00,>57,>40,>43,>00,>00
       byte >51,>45,>00,>57,>46,>45,>00,>00
       byte >51,>46,>00,>43,>7B,>45,>00,>00
       byte >52,>86,>00,>47,>60,>43,>00,>00                          ; chop
       byte >52,>6E,>00,>60,>77,>42,>00,>00
       byte >52,>7D,>00,>57,>67,>43,>00,>00
       byte >52,>6A,>00,>30,>67,>42,>00,>00
       byte >52,>3E,>00,>43,>7B,>42,>00,>00
       byte >52,>35,>00,>57,>67,>43,>00,>00
       byte >53,>2B,>00,>40,>80,>46,>00,>00                          ; lollipop
       byte >53,>8A,>00,>57,>67,>45,>00,>00
       byte >53,>09,>00,>80,>90,>44,>00,>00
       byte >53,>70,>00,>80,>90,>43,>00,>00
       byte >53,>74,>00,>57,>87,>42,>00,>00
       byte >53,>33,>00,>57,>67,>45,>00,>00
       byte >54,>78,>00,>37,>37,>47,>00,>00                          ; icecream
       byte >54,>8A,>00,>7F,>7F,>47,>00,>00
       byte >54,>0B,>00,>57,>67,>46,>00,>00
       byte >54,>65,>00,>57,>87,>46,>00,>00
       byte >54,>53,>00,>43,>7B,>47,>00,>00
       byte >54,>4C,>00,>6B,>7B,>46,>00,>00
       byte >55,>7B,>00,>50,>60,>45,>00,>00                          ; pudding
       byte >55,>87,>00,>57,>67,>45,>00,>00
       byte >55,>0D,>00,>30,>67,>43,>00,>00
       byte >55,>66,>00,>43,>87,>43,>00,>00
       byte >55,>53,>00,>6B,>7B,>42,>00,>00
       byte >55,>4F,>00,>57,>67,>47,>00,>00
       byte >56,>7E,>00,>37,>80,>44,>00,>00                          ; apple
       byte >56,>8C,>00,>57,>67,>44,>00,>00
       byte >56,>70,>00,>30,>90,>44,>00,>00
       byte >56,>66,>00,>6B,>87,>44,>00,>00
       byte >56,>3C,>00,>43,>7B,>42,>00,>00
       byte >56,>39,>00,>43,>7B,>42,>00,>00
       byte >57,>7E,>00,>87,>80,>47,>00,>00                          ; bottle
       byte >57,>24,>00,>60,>70,>47,>00,>00
       byte >57,>70,>00,>57,>90,>47,>00,>00
       byte >57,>12,>00,>57,>40,>47,>00,>00
       byte >57,>5E,>00,>57,>67,>47,>00,>00
       byte >57,>1D,>00,>30,>67,>47,>00,>00
       byte >50,>17,>00,>40,>40,>42,>00,>00                          ; can
       byte >50,>73,>00,>30,>67,>42,>00,>00
       byte >50,>07,>00,>57,>67,>43,>00,>00
       byte >50,>02,>00,>57,>67,>43,>00,>00
       byte >51,>0F,>00,>57,>67,>43,>00,>00                          ; candy
       byte >51,>3A,>00,>30,>48,>43,>00,>00
       byte >51,>41,>00,>80,>67,>42,>00,>00
       byte >51,>85,>00,>43,>7B,>42,>00,>00
       byte >52,>6C,>00,>57,>47,>43,>00,>00                          ; chop
       byte >52,>3A,>00,>57,>48,>43,>00,>00
       byte >52,>69,>00,>30,>40,>03,>00,>00
       byte >52,>80,>00,>30,>40,>03,>00,>00
       byte >53,>04,>00,>57,>67,>42,>00,>00                          ; lollipop
       byte >53,>4B,>00,>30,>88,>42,>00,>00
       byte >53,>11,>00,>57,>67,>46,>00,>00
       byte >53,>80,>00,>57,>40,>44,>00,>00
       byte >54,>69,>00,>30,>67,>46,>00,>00                          ; icecream
       byte >54,>35,>00,>57,>90,>46,>00,>00
       byte >54,>69,>00,>30,>90,>46,>00,>00
       byte >54,>80,>00,>80,>80,>44,>00,>00
       byte >55,>57,>00,>57,>40,>46,>00,>00                          ; pudding
       byte >55,>35,>00,>57,>40,>46,>00,>00
       byte >55,>25,>00,>6B,>7B,>43,>00,>00
       byte >55,>1B,>00,>57,>67,>44,>00,>00
       byte >56,>58,>00,>57,>40,>44,>00,>00                          ; apple
       byte >56,>4E,>00,>67,>40,>42,>00,>00
       byte >56,>37,>00,>57,>67,>46,>00,>00
       byte >56,>85,>00,>6B,>7B,>44,>00,>00
       byte >57,>5B,>00,>57,>67,>47,>00,>00                          ; bottle
       byte >57,>4E,>00,>40,>67,>47,>00,>00
       byte >57,>49,>00,>57,>67,>47,>00,>00
       byte >57,>28,>00,>57,>67,>47,>00,>00
       byte >A1,>50,>00,>57,>40,>42,>00,>00                          ; mushroom
       byte >A1,>43,>00,>6B,>54,>42,>01,>00
       byte >A1,>40,>00,>43,>7B,>42,>02,>00
       byte >A1,>8F,>00,>57,>8F,>42,>03,>00
       byte >A1,>8F,>00,>43,>7B,>42,>04,>00
       byte >A1,>8F,>00,>6B,>7B,>42,>05,>00
       byte >A1,>45,>00,>80,>67,>42,>06,>00
       byte >A1,>38,>00,>6B,>54,>42,>07,>00
       byte >A1,>74,>00,>30,>40,>42,>06,>00
       byte >A1,>74,>00,>30,>88,>42,>05,>00
       byte >A1,>74,>00,>78,>88,>42,>04,>00
       byte >A1,>74,>00,>80,>40,>42,>03,>00
       byte >A1,>54,>00,>57,>40,>42,>02,>00
       byte >A1,>3B,>00,>43,>7B,>42,>01,>00
       byte >A1,>3B,>00,>6B,>7B,>42,>00,>00
       byte >A1,>53,>00,>80,>40,>42,>01,>00

* Data block at 63d5
       byte >31,>00,>00,>00,>00,>00,>00,>00                          ; blank

* Data block at 63dd
       byte >00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00 ; creature 1
       byte >00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00 ; creature 2
       byte >00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00 ; creature 3

* Data block at 640d
byte_640d:                             ; >640d
       byte >70,>17,>00,>50,>50,>47,>00,>00,>00,>00,>00,>68,>68,>00,>00,>00 ; mummy
       byte >7C,>6D,>00,>50,>50,>44,>00,>00,>00,>00,>00,>72,>72,>00,>00,>00 ; dracula
       byte >78,>43,>00,>50,>50,>43,>00,>00,>00,>00,>00,>72,>72,>00,>00,>00 ; devil
       byte >74,>55,>00,>50,>50,>42,>00,>00,>00,>00,>00,>50,>60,>00,>00,>00 ; frankenstein
       byte >9C,>56,>00,>58,>38,>42,>00,>00,>00,>00,>00,>50,>60,>00,>00,>00 ; hunchback
