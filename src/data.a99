* Data block at 5e00
menu_selection:                        ; >5e00
       byte >00
charset_addr:                          ; >5e01
       data charset_base
last_frames:                           ; >5e03
       byte >00
in_handlers:                           ; >5e04
       byte >00                                                      ; flag set but never read
rand8:                                 ; >5e05
       data >0000                                                    ; only low 8 bits are
                                                                     ; meaningfully random
       bss 9
width_bytes:                           ; >5e10
       byte >02
height_lines:                          ; >5e11
       byte >12
counter_low:                           ; >5e12
       byte >3A
counter_high:                          ; >5e13
       byte >F5
game_flags:                            ; >5e14
       byte >AC                                                      ; b0 set if room content
                                                                     ; drawn
saved_graphic:                         ; >5e15
       byte >36
saved_x:                               ; >5e16
       byte >28
saved_y:                               ; >5e17
       byte >97
some_height:                           ; >5e18
       byte >00
some_width:                            ; >5e19
       byte >00
room_attr:                             ; >5e1a
       byte >00
room_ptr:                              ; >5e1b
       data >2C00
room_width:                            ; >5e1d
       byte >30
room_height:                           ; >5e1e
       byte >0E
pickup_flags:                          ; >5e1f
       byte >00
pickup_pressed:                        ; >5e20
       byte >00
lives:                                 ; >5e21
       byte >00
text_attr:                             ; >5e22
       byte >C5
line_counter:                          ; >5e23
       byte >00
line_flags:                            ; >5e24
       byte >3A
num_creatures:                         ; >5e25
       byte >EF                                                      ; number of creatures
                                                                     ; processed this frame
last_creat_room:                       ; >5e26
       byte >22
creature_delay:                        ; >5e27
       byte >22
player_energy:                         ; >5e28
       byte >AF
chicken_level:                         ; >5e29
       byte >3A                                                      ; last drawn chicken level
score_bcd:                             ; >5e2a
       byte >F5,>AC,>36
in_doorway:                            ; >5e2d
       byte >0E
door_timer:                            ; >5e2e
       byte >00
walk_counter:                          ; >5e2f
       byte >00
inventory1:                            ; >5e30
       byte >06,>00,>00,>2C
inventory2:                            ; >5e34
       byte >30,>0E,>00,>00
inventory3:                            ; >5e38
       byte >00,>00,>00,>3A
flash_timer:                           ; >5e3c
       byte >EF                                                      ; score flash timer
clock_hours:                           ; >5e3d
       byte >22
clock_minutes:                         ; >5e3e
       byte >22
clock_seconds:                         ; >5e3f
       byte >AF
visited_rooms:                         ; >5e40
       byte >3A,>F5,>C0,>32,>33,>34,>32,>34,>0E,>00                  ; {visit rooms bit array
       byte >00,>80,>5B,>00,>0D,>80,>EF,>22,>22,>0D                  ; }

* Data block at 5e54
visited_percent:                       ; >5e54
       byte >80
food_ptr:                              ; >5e55
       data >0000

* Initial game state data
player_init:                           ; >600d
       byte >00,>00,>00,>00,>00,>00,>00,>00

* Data block at 6015
weapon_init:                           ; >6015
       byte >00,>00,>00,>00,>00,>00,>00,>00

* Data block at 601d
sound_init:                            ; >601d
       byte >00,>00,>00,>00,>00,>00,>00,>00

* Data block at 6025
acg_key_init:                          ; >6025
       byte >8C,>00,>00,>58,>58,>46,>00,>00
       byte >8D,>00,>00,>58,>58,>46,>00,>00
       byte >8E,>00,>00,>58,>58,>46,>00,>00

* green key
green_key_init:                        ; >603d
       byte >81,>05,>00,>70,>60,>44,>00,>00

* red key
red_key_init:                          ; >6045
       byte >81,>17,>00,>80,>40,>42,>00,>00

* cyan key
cyan_key_init:                         ; >604d
       byte >81,>53,>00,>58,>58,>45,>00,>00

* yellow key
       byte >81,>66,>00,>30,>87,>46,>00,>00

* Data block at 605d
       byte >80,>09,>00,>40,>40,>42,>00,>00                          ; leaf
       byte >00,>00,>00,>00,>00,>00,>00,>00                          ; tombstone1
       byte >00,>00,>00,>00,>00,>00,>00,>00                          ; tombstone2
       byte >00,>00,>00,>00,>00,>00,>00,>00                          ; tombstone3
       byte >00,>00,>00,>00,>00,>00,>00,>00                          ; tombstone4
       byte >8A,>05,>00,>40,>70,>46,>00,>00                          ; crucafix
       byte >8B,>30,>00,>40,>70,>45,>00,>00                          ; spanner
       byte >82,>3B,>00,>60,>60,>44,>00,>00                          ; wine
       byte >83,>48,>00,>70,>70,>45,>00,>00                          ; coin
       byte >84,>64,>00,>80,>80,>46,>00,>00                          ; wing
       byte >85,>6B,>00,>40,>40,>45,>00,>00                          ; whip
       byte >86,>13,>00,>50,>50,>44,>00,>00                          ; frog's leg
       byte >87,>84,>00,>60,>40,>43,>00,>00                          ; jewel
       byte >88,>1F,>00,>70,>70,>42,>00,>00                          ; money bag
       byte >89,>49,>00,>50,>40,>47,>00,>00                          ; skull

* Data block at 60d5
food_init:                             ; >60d5
       byte >50,>27,>00,>57,>67,>43,>00,>00                          ; can
       byte >50,>7F,>00,>40,>40,>46,>00,>00
       byte >50,>1E,>00,>50,>57,>46,>00,>00
       byte >50,>0C,>00,>60,>60,>43,>00,>00
       byte >50,>67,>00,>57,>40,>42,>00,>00
       byte >50,>41,>00,>57,>67,>42,>00,>00
       byte >51,>75,>00,>30,>40,>44,>00,>00                          ; candy
       byte >51,>83,>00,>30,>40,>46,>00,>00
       byte >51,>0C,>00,>60,>70,>42,>00,>00
       byte >51,>68,>00,>57,>40,>43,>00,>00
       byte >51,>45,>00,>57,>46,>45,>00,>00
       byte >51,>46,>00,>43,>7B,>45,>00,>00
       byte >52,>86,>00,>47,>60,>43,>00,>00                          ; chop
       byte >52,>6E,>00,>60,>77,>42,>00,>00
       byte >52,>7D,>00,>57,>67,>43,>00,>00
       byte >52,>6A,>00,>30,>67,>42,>00,>00
       byte >52,>3E,>00,>43,>7B,>42,>00,>00
       byte >52,>35,>00,>57,>67,>43,>00,>00
       byte >53,>2B,>00,>40,>80,>46,>00,>00                          ; lollipop
       byte >53,>8A,>00,>57,>67,>45,>00,>00
       byte >53,>09,>00,>80,>90,>44,>00,>00
       byte >53,>70,>00,>80,>90,>43,>00,>00
       byte >53,>74,>00,>57,>87,>42,>00,>00
       byte >53,>33,>00,>57,>67,>45,>00,>00
       byte >54,>78,>00,>37,>37,>47,>00,>00                          ; icecream
       byte >54,>8A,>00,>7F,>7F,>47,>00,>00
       byte >54,>0B,>00,>57,>67,>46,>00,>00
       byte >54,>65,>00,>57,>87,>46,>00,>00
       byte >54,>53,>00,>43,>7B,>47,>00,>00
       byte >54,>4C,>00,>6B,>7B,>46,>00,>00
       byte >55,>7B,>00,>50,>60,>45,>00,>00                          ; pudding
       byte >55,>87,>00,>57,>67,>45,>00,>00
       byte >55,>0D,>00,>30,>67,>43,>00,>00
       byte >55,>66,>00,>43,>87,>43,>00,>00
       byte >55,>53,>00,>6B,>7B,>42,>00,>00
       byte >55,>4F,>00,>57,>67,>47,>00,>00
       byte >56,>7E,>00,>37,>80,>44,>00,>00                          ; apple
       byte >56,>8C,>00,>57,>67,>44,>00,>00
       byte >56,>70,>00,>30,>90,>44,>00,>00
       byte >56,>66,>00,>6B,>87,>44,>00,>00
       byte >56,>3C,>00,>43,>7B,>42,>00,>00
       byte >56,>39,>00,>43,>7B,>42,>00,>00
       byte >57,>7E,>00,>87,>80,>47,>00,>00                          ; bottle
       byte >57,>24,>00,>60,>70,>47,>00,>00
       byte >57,>70,>00,>57,>90,>47,>00,>00
       byte >57,>12,>00,>57,>40,>47,>00,>00
       byte >57,>5E,>00,>57,>67,>47,>00,>00
       byte >57,>1D,>00,>30,>67,>47,>00,>00
       byte >50,>17,>00,>40,>40,>42,>00,>00                          ; can
       byte >50,>73,>00,>30,>67,>42,>00,>00
       byte >50,>07,>00,>57,>67,>43,>00,>00
       byte >50,>02,>00,>57,>67,>43,>00,>00
       byte >51,>0F,>00,>57,>67,>43,>00,>00                          ; candy
       byte >51,>3A,>00,>30,>48,>43,>00,>00
       byte >51,>41,>00,>80,>67,>42,>00,>00
       byte >51,>85,>00,>43,>7B,>42,>00,>00
       byte >52,>6C,>00,>57,>47,>43,>00,>00                          ; chop
       byte >52,>3A,>00,>57,>48,>43,>00,>00
       byte >52,>69,>00,>30,>40,>03,>00,>00
       byte >52,>80,>00,>30,>40,>03,>00,>00
       byte >53,>04,>00,>57,>67,>42,>00,>00                          ; lollipop
       byte >53,>4B,>00,>30,>88,>42,>00,>00
       byte >53,>11,>00,>57,>67,>46,>00,>00
       byte >53,>80,>00,>57,>40,>44,>00,>00
       byte >54,>69,>00,>30,>67,>46,>00,>00                          ; icecream
       byte >54,>35,>00,>57,>90,>46,>00,>00
       byte >54,>69,>00,>30,>90,>46,>00,>00
       byte >54,>80,>00,>80,>80,>44,>00,>00
       byte >55,>57,>00,>57,>40,>46,>00,>00                          ; pudding
       byte >55,>35,>00,>57,>40,>46,>00,>00
       byte >55,>25,>00,>6B,>7B,>43,>00,>00
       byte >55,>1B,>00,>57,>67,>44,>00,>00
       byte >56,>58,>00,>57,>40,>44,>00,>00                          ; apple
       byte >56,>4E,>00,>67,>40,>42,>00,>00
       byte >56,>37,>00,>57,>67,>46,>00,>00
       byte >56,>85,>00,>6B,>7B,>44,>00,>00
       byte >57,>5B,>00,>57,>67,>47,>00,>00                          ; bottle
       byte >57,>4E,>00,>40,>67,>47,>00,>00
       byte >57,>49,>00,>57,>67,>47,>00,>00
       byte >57,>28,>00,>57,>67,>47,>00,>00
       byte >A1,>50,>00,>57,>40,>42,>00,>00                          ; mushroom
       byte >A1,>43,>00,>6B,>54,>42,>01,>00
       byte >A1,>40,>00,>43,>7B,>42,>02,>00
       byte >A1,>8F,>00,>57,>8F,>42,>03,>00
       byte >A1,>8F,>00,>43,>7B,>42,>04,>00
       byte >A1,>8F,>00,>6B,>7B,>42,>05,>00
       byte >A1,>45,>00,>80,>67,>42,>06,>00
       byte >A1,>38,>00,>6B,>54,>42,>07,>00
       byte >A1,>74,>00,>30,>40,>42,>06,>00
       byte >A1,>74,>00,>30,>88,>42,>05,>00
       byte >A1,>74,>00,>78,>88,>42,>04,>00
       byte >A1,>74,>00,>80,>40,>42,>03,>00
       byte >A1,>54,>00,>57,>40,>42,>02,>00
       byte >A1,>3B,>00,>43,>7B,>42,>01,>00
       byte >A1,>3B,>00,>6B,>7B,>42,>00,>00
       byte >A1,>53,>00,>80,>40,>42,>01,>00

* Data block at 63d5
       byte >31,>00,>00,>00,>00,>00,>00,>00                          ; blank

* Data block at 63dd
       byte >00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00 ; creature 1
       byte >00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00 ; creature 2
       byte >00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00,>00 ; creature 3

* Data block at 640d
byte_640d:                             ; >640d
       byte >70,>17,>00,>50,>50,>47,>00,>00,>00,>00,>00,>68,>68,>00,>00,>00 ; mummy
       byte >7C,>6D,>00,>50,>50,>44,>00,>00,>00,>00,>00,>72,>72,>00,>00,>00 ; dracula
       byte >78,>43,>00,>50,>50,>43,>00,>00,>00,>00,>00,>72,>72,>00,>00,>00 ; devil
       byte >74,>55,>00,>50,>50,>42,>00,>00,>00,>00,>00,>50,>60,>00,>00,>00 ; frankenstein
       byte >9C,>56,>00,>58,>38,>42,>00,>00,>00,>00,>00,>50,>60,>00,>00,>00 ; hunchback

bytes:
       byte >00,>01,>02,>03,>04,>05,>06,>07,>08,>09,>0a,>0b,>0c,>0d,>0e,>0f
       byte >10,>11,>12,>13,>14,>15,>16,>17,>18,>19,>1a,>1b,>1c,>1d,>1e,>1f
       byte >20,>21,>22,>23,>24,>25,>26,>27,>28,>29,>2a,>2b,>2c,>2d,>2e,>2f
       byte >30,>31,>32,>33,>34,>35,>36,>37,>38,>39,>3a,>3b,>3c,>3d,>3e,>3f
       byte >40,>41,>42,>43,>44,>45,>46,>47,>48,>49,>4a,>4b,>4c,>4d,>4e,>4f
       byte >50,>51,>52,>53,>54,>55,>56,>57,>58,>59,>5a,>5b,>5c,>5d,>5e,>5f
       byte >60,>61,>62,>63,>64,>65,>66,>67,>68,>69,>6a,>6b,>6c,>6d,>6e,>6f
       byte >70,>71,>72,>73,>74,>75,>76,>77,>78,>79,>7a,>7b,>7c,>7d,>7e,>7f
       byte >80,>81,>82,>83,>84,>85,>86,>87,>88,>89,>8a,>8b,>8c,>8d,>8e,>8f
       byte >90,>91,>92,>93,>94,>95,>96,>97,>98,>99,>9a,>9b,>9c,>9d,>9e,>9f
       byte >a0,>a1,>a2,>a3,>a4,>a5,>a6,>a7,>a8,>a9,>aa,>ab,>ac,>ad,>ae,>af
       byte >b0,>b1,>b2,>b3,>b4,>b5,>b6,>b7,>b8,>b9,>ba,>bb,>bc,>bd,>be,>bf
       byte >c0,>c1,>c2,>c3,>c4,>c5,>c6,>c7,>c8,>c9,>ca,>cb,>cc,>cd,>ce,>cf
       byte >d0,>d1,>d2,>d3,>d4,>d5,>d6,>d7,>d8,>d9,>da,>db,>dc,>dd,>de,>df
       byte >e0,>e1,>e2,>e3,>e4,>e5,>e6,>e7,>e8,>e9,>ea,>eb,>ec,>ed,>ee,>ef
       byte >f0,>f1,>f2,>f3,>f4,>f5,>f6,>f7,>f8,>f9,>fa,>fb,>fc,>fd,>fe,>ff

ti_colors:
       byte >11,>41,>61,>d1,>c1,>71,>a1,>e1,>14,>44,>64,>d4,>c4,>74,>a4,>e4
       byte >16,>46,>66,>d6,>c6,>76,>a6,>e6,>1d,>4d,>6d,>dd,>cd,>7d,>ad,>ed
       byte >1c,>4c,>6c,>dc,>cc,>7c,>ac,>ec,>17,>47,>67,>d7,>c7,>77,>a7,>e7
       byte >1a,>4a,>6a,>da,>ca,>7a,>aa,>ea,>1e,>4e,>6e,>de,>ce,>7e,>ae,>ee
       byte >11,>51,>81,>d1,>21,>71,>b1,>f1,>15,>55,>85,>d5,>25,>75,>b5,>f5
       byte >18,>58,>88,>d8,>28,>78,>b8,>f8,>1d,>5d,>8d,>dd,>2d,>7d,>bd,>fd
       byte >12,>52,>82,>d2,>22,>72,>b2,>f2,>17,>57,>87,>d7,>27,>77,>b7,>f7
       byte >1b,>5b,>8b,>db,>2b,>7b,>bb,>fb,>1f,>5f,>8f,>df,>2f,>7f,>bf,>ff
       byte >11,>14,>16,>1d,>1c,>17,>1a,>1e,>41,>44,>46,>4d,>4c,>47,>4a,>4e
       byte >61,>64,>66,>6d,>6c,>67,>6a,>6e,>d1,>d4,>d6,>dd,>dc,>d7,>da,>de
       byte >c1,>c4,>c6,>cd,>cc,>c7,>ca,>ce,>71,>74,>76,>7d,>7c,>77,>7a,>7e
       byte >a1,>a4,>a6,>ad,>ac,>a7,>aa,>ae,>e1,>e4,>e6,>ed,>ec,>e7,>ea,>ee
       byte >11,>15,>18,>1d,>12,>17,>1b,>1f,>51,>55,>58,>5d,>52,>57,>5b,>5f
       byte >81,>85,>88,>8d,>82,>87,>8b,>8f,>d1,>d5,>d8,>dd,>d2,>d7,>db,>df
       byte >21,>25,>28,>2d,>22,>27,>2b,>2f,>71,>75,>78,>7d,>72,>77,>7b,>7f
       byte >b1,>b5,>b8,>bd,>b2,>b7,>bb,>bf,>f1,>f5,>f8,>fd,>f2,>f7,>fb,>ff
