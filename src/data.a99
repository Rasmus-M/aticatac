* Data block at 5e00
charset_addr:                          ; >5e01
       data charset_base
rand8:                                 ; >5e05
       data >0000                                          ; only low 8 bits are meaningfully random
menu_selection:                        ; >5e00
       byte >00
last_frames:                           ; >5e03
       byte >00
in_handlers:                           ; >5e04
       byte >00                                            ; flag set but never read

       bss 9

game_data:
       equ  $
width_bytes:                           ; >5e10
       byte >02
height_lines:                          ; >5e11
       byte >12
counter_low:                           ; >5e12
       byte >3A
counter_high:                          ; >5e13
       byte >F5
game_flags:                            ; >5e14
       byte >AC                                                      ; b0 set if room content drawn
saved_graphic:                         ; >5e15
       byte >36
saved_x:                               ; >5e16
       byte >28
saved_y:                               ; >5e17
       byte >97
height23:                           ; >5e18
       byte >00
height2:                            ; >5e19
       byte >00
room_attr:                             ; >5e1a
       byte >00
room_ptr:                              ; >5e1b
       data >2C00
room_width:                            ; >5e1d
       byte >30
room_height:                           ; >5e1e
       byte >0E
pickup_flags:                          ; >5e1f
       byte >00
pickup_pressed:                        ; >5e20
       byte >00
lives:                                 ; >5e21
       byte >00
text_attr:                             ; >5e22
       byte >C5
line_counter:                          ; >5e23
       byte >00
line_flags:                            ; >5e24
       byte >3A
num_creatures:                         ; >5e25
       byte >EF                                            ; number of creatures processed this frame
last_creat_room:                       ; >5e26
       byte >22
creature_delay:                        ; >5e27
       byte >22
player_energy:                         ; >5e28
       byte >AF
chicken_level:                         ; >5e29
       byte >3A                                            ; last drawn chicken level
score_bcd:                             ; >5e2a
       byte >F5,>AC,>36
in_doorway:                            ; >5e2d
       byte >0E
door_timer:                            ; >5e2e
       byte >00
walk_counter:                          ; >5e2f
       byte >00
inventory1:                            ; >5e30
       byte >06,>00,>00,>2C
inventory2:                            ; >5e34
       byte >30,>0E,>00,>00
inventory3:                            ; >5e38
       byte >00,>00,>00,>3A
flash_timer:                           ; >5e3c
       byte >EF                                            ; score flash timer
clock_hours:                           ; >5e3d
       byte >22
clock_minutes:                         ; >5e3e
       byte >22
clock_seconds:                         ; >5e3f
       byte >AF
visited_rooms:                         ; >5e40
       byte >3A,>F5,>C0,>32,>33,>34,>32,>34,>0E,>00        ; {visit rooms bit array
       byte >00,>80,>5B,>00,>0D,>80,>EF,>22,>22,>0D        ; }

* Data block at 5e54
visited_percent:                       ; >5e54
       byte >80
food_ptr:                              ; >5e55
       data >0000

game_data_end:
       equ  $

*
* Misc data moved from the main source code
*

* Data block at 7cea
menu_attrs:                            ; >7cea
       byte >C5,>45,>45,>C5,>45,>45,>47
menu_ycoords:                          ; >7cf1
       byte >10,>28,>40,>58,>70,>88,>A0

* Data block at 83ca
rnd_velocities:                        ; >83ca
       byte >03,>00
       byte >03,>00                                                  ; random velocities (0-3)
       byte >03,>01
       byte >03,>01
       byte >03,>01
       byte >02,>02
       byte >02,>02
       byte >02,>02
       byte >02,>02
       byte >02,>02
       byte >02,>02
       byte >01,>03
       byte >01,>03
       byte >01,>03
       byte >00,>03
       byte >00,>03

* Data block at 8c2d
chicken_entity:                        ; >8c2d
       byte >13,>00,>00,>c8,>77,>00,>00,>00
chicken_empty_addr_ram:
       data g_chicken_empty
chicken_empty_size:
       byte >06,>1E
chicken_full_addr_ram:
       data g_chicken_full
chicken_full_size:
       byte >06,>1E

* Data block at 8b6a
creature_default:                      ; >8b6a
       byte >58,>00,>5C,>68,>68,>44,>00,>00
       byte >02,>02,>00,>00,>00,>10,>20,>00

* Data block at 8b7a
creatures:                             ; >8b7a
       byte >5C                                                      ; spider
       byte >5E                                                      ; spikey
       byte >98                                                      ; bat
       byte >98                                                      ; bat
       byte >90                                                      ; witch
       byte >90                                                      ; witch
       byte >94                                                      ; monk
       byte >94                                                      ; monk
       byte >5C                                                      ; spider
       byte >5E                                                      ; spikey
       byte >60                                                      ; blob
       byte >62                                                      ; ghoul
       byte >4C                                                      ; pumpkin
       byte >4E                                                      ; ghostlet
       byte >68                                                      ; ghost
       byte >6A                                                      ; batlet

* Data block at 925c
key_attrs:                             ; >925c
       byte >42                                                      ; red
       byte >44                                                      ; green
       byte >45                                                      ; cyan
       byte >46                                                      ; yellow

* blank graphic and h_player_appear handler
player_template:                       ; >9481
       byte >66,>00,>00,>60,>68,>47,>FF,>00

my_player_template:                       ; >9481
       byte >01,>00,>00,>60,>68,>47,>FF,>00

* Data block at 94dd
acg_key_rooms:                         ; >94dd
       byte >81,>45,>7C
       byte >85,>49,>2B
       byte >6A,>3B,>7C
       byte >69,>71,>2B
       byte >67,>85,>7C
       byte >68,>7F,>2B
       byte >4D,>73,>7C
       byte >17,>10,>2B

* Data block at 9883
walk_dir:                              ; >9883
       byte >00,>20                                                  ; walk down
       byte >E0,>00                                                  ; walk left ($e0 is actually -$20)
       byte >00,>E0                                                  ; walk up ($e0 is actually -$20)
       byte >20,>00                                                  ; walk right

* Data block at 98c4
mushroom_attrs:                        ; >98c4
       byte >42                                                      ; bright red
       byte >43                                                      ; bright magenta
       byte >46                                                      ; bright yellow
       byte >43                                                      ; bright magenta

* Data block at 990c
green_key_rooms:                       ; >990c
       byte >05,>06,>07,>6D,>25,>24,>23,>22
red_key_rooms:                         ; >9914
       byte >17,>13,>09,>0D,>89,>87,>80,>85
cyan_key_rooms:                        ; >991c
       byte >53,>8F,>41,>94,>33,>91,>39,>4C

* Data block at a17d
entity_to_draw:                        ; >a17d
       byte >21,>00,>00,>28,>97,>47,>00,>00

* Data block at a331
menu_entities:                         ; >a331
       byte >32,>00,>00,>20,>4F,>46,>00,>00                          ; cursor (left)
       byte >33,>00,>00,>30,>4F,>46,>00,>00                          ; cursor (right)
       byte >4A,>00,>00,>20,>37,>44,>00,>00                          ; kempston (left)
       byte >4B,>00,>00,>30,>37,>44,>00,>00                          ; kempston (right)
       byte >48,>00,>00,>20,>1C,>43,>00,>00                          ; keyboard (left)
       byte >49,>00,>00,>30,>1C,>43,>00,>00                          ; keyboard (right)
       byte >01,>00,>00,>28,>67,>47,>00,>00                          ; knight (facing left)
       byte >11,>00,>00,>28,>7F,>47,>00,>00                          ; wizard (facing left)
       byte >21,>00,>00,>28,>97,>47,>00,>00                          ; serf (facing left)
